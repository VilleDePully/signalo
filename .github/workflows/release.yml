name: Release

on:
  release:
    types: [published]

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set version
        run: echo ${{ github.event.release.tag_name }} > CURRENT_VERSION.txt

      - name: "build dockerfile"
        run: docker build -f .docker/Dockerfile --tag opengisch/signalo:latest .

      - name: "create dumps"
        run: |
          docker run -d -p 5432:5432 --name signalo opengisch/signalo:latest
          docker exec signalo init_db.sh wait
          docker exec signalo pg_dump --format custom --blobs --compress 5 --file db-dump.backup signalo
          docker exec signalo init_db.sh build -d
          docker exec signalo pg_dump --format custom --blobs --compress 5 --file db-dump-with-demo.backup signalo

      - name: "create archive"
        run: |
          zip -r project.zip project README.md

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "push to dockerhub"
        if: github.event_name != 'pull_request'
        run: |
          docker push opengisch/signalo:latest
          docker tag opengisch/signalo:latest opengisch/signalo:${{ github.event.release.tag_name }}
          docker push opengisch/signalo:${{ github.event.release.tag_name }}

      - name: Upload Release Asset - project
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./project.zip
          asset_name: signalo-${{ github.event.release.tag_name }}-project.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - dump
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: db-dump.backup
          asset_name: signalo-${{ github.event.release.tag_name }}-db-dump.backup
          asset_content_type: application/zip

      - name: Upload Release Asset - dump with demo
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: db-dump-with-demo.backup
          asset_name: signalo-${{ github.event.release.tag_name }}-db-dump-with-demo.backup
          asset_content_type: application/zip